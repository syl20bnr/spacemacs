;;; helm-org-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from helm-org.el

(require 'helm-easymenu)
(easy-menu-add-item nil '("Tools" "Helm") '("Org" ["Org headlines in org agenda files" helm-org-agenda-files-headings t] ["Org headlines in buffer" helm-org-in-buffer-headings t]) "Elpa")
(autoload 'helm-org-agenda-files-headings "helm-org" "\
Preconfigured helm for org files headings.

(fn &optional ARG)" t)
(autoload 'helm-org-in-buffer-headings "helm-org" "\
Preconfigured helm for org buffer headings.

(fn &optional ARG)" t)
(autoload 'helm-org-parent-headings "helm-org" "\
Preconfigured helm for org headings that are parents of the current heading.

(fn &optional ARG)" t)
(autoload 'helm-org-capture-templates "helm-org" "\
Preconfigured helm for org templates." t)
(autoload 'helm-org-completing-read-tags "helm-org" "\
Completing read function for Org tags.

This function is used as a `completing-read' function in
`helm-completing-read-handlers-alist' by `org-set-tags' and
`org-capture'.

NOTE: Org tag completion will work only if you disable org fast tag
selection, see (info \"(org) setting tags\").

(fn PROMPT COLLECTION PRED REQ INITIAL HIST DEF INHERIT-INPUT-METHOD NAME BUFFER)")
(register-definition-prefixes "helm-org" '("helm-"))

;;; End of scraped data

(provide 'helm-org-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; helm-org-autoloads.el ends here
